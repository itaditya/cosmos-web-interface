{"code":{"artificial_intelligence":{"Linear_Regression":{"linear_regression.py":1},"TSP":{"salesman.cpp":1},"tsp.c":1},"backtracking":{"algorithm-x":{"algo-x.cpp":1},"knight_tour":{"knight_tour.cpp":1},"number_of_ways_in_maze":{"noOfWaysinMaze.cpp":1,"no_of_ways_in_maze.go":1,"no_of_ways_in_maze.java":1},"n_queen":{"nqueen.py":1,"NQueen_Backtracking.cpp":1,"NQueen_BitImp.cpp":1},"partitions_of_number":{"partitions_of_number.cpp":1,"partitions_of_number.go":1},"partitions_of_set":{"set_partitions.cpp":1},"permutations_of_string":{"permutations_of_string.cpp":1,"permutations_of_string.go":1,"permutations_of_string.py":1,"permutations_of_string_itertools.py":1,"permutations_of_string_stl.cpp":1},"rat_in_a_maze":{"rat_in_a_maze.cpp":1},"subset_sum":{"SubsetSum.java":1,"SubsetSum.py":1,"Subset_Sum.c":1,"subset_sum.cpp":1},"sudoku_solve":{"SudokuSolve.c":1,"SudokuSolve.cpp":1}},"bit-manipulation":{"bit_division":{"bitDivision.c":1,"bitDivision.go":1,"BitDivision.java":1,"bitDivision.js":1,"bitDivison.py":1},"convert_number_binary":{"convert_number_binary.c":1,"convert_number_binary.cpp":1,"convert_number_binary.java":1,"convert_number_binary.js":1,"intToBinary.py":1},"count_set_bits":{"CountSetBits.java":1,"count_set_bits.c":1,"count_set_bits.cpp":1,"count_set_bits.py":1},"flip_bits":{"FlipBits.java":1,"flippingbits.c":1,"flippingbits.cpp":1,"flippingbits.py":1},"hamming_distance":{"hamming_distance.c":1,"hamming_distance.cpp":1},"lonely_integer":{"LonelyInt.java":1,"LonelyInt.js":1,"lonelyInteger.cpp":1,"lonelyInteger.go":1,"lonelyInteger.py":1},"magic_number":{"magic_number.java":1,"magic_number.py":1,"nth_magic_number.cpp":1},"maximum_xor_value":{"max_xor_value.cpp":1},"subset_generation":{"subsetgeneratorusingbit.cpp":1,"subsetsum.cpp":1},"sum_binary_numbers":{"sum_binary_numbers.c":1},"sum_equals_xor":{"sum_equals_xor.c":1,"sum_equals_xor.cpp":1},"thrice_unique_number":{"threeUnique.cpp":1,"thrice_Unique_number.java":1,"uniqueNumber.py":1},"twice_unique_number":{"twoUniqueNumbers.cpp":1}},"computational_geometry":{"2d_line_intersection":{"line.c":1,"line.cpp":1},"area_of_polygon":{"area_of_polygon.cpp":1,"area_of_polygon.java":1},"area_of_triangle":{"area_of_triangle.cpp":1,"area_of_triangle.go":1,"area_of_triangle.java":1,"area_of_triangle.py":1},"axis_aligned_bounding_box_collision":{"axis_aligned_bounding_box_collision.cpp":1,"axis_aligned_bounding_box_collision.go":1},"distance_between_points":{"distance_between_points.cpp":1,"distance_between_points.go":1,"distance_between_points.java":1},"graham_scan":{"graham_scan.java":1},"jarvis_march":{"jarvis_march.cpp":1},"quickhull":{"quickhull.cpp":1},"sutherland_hodgeman_clipping":{"sutherland.cpp":1}},"cryptography":{"affine_cipher":{"affine.cpp":1,"affine.py":1},"atbash_cipher":{"atbash_cipher.cpp":1,"atbash_cipher.py":1},"caesar_cipher":{"caesar.c":1,"caesar.go":1,"caesar.py":1,"caesar_cipher.cpp":1,"caesar_cipher.java":1,"caesar_cipher.js":1,"decryption.cpp":1,"encryption.cpp":1},"morse_cipher":{"morse_code_translator.cpp":1,"morse_code_translator.py":1},"vigenere_cipher":{"vigenere.go":1,"vigenere_cipher.c":1,"vigenere_cipher.js":1,"vigenere_cipher.py":1,"vigenere_cypher.cpp":1}},"data_structures":{"avl_tree":{"AVL_tree.cpp":1},"binomial_heap":{"binomial_heap.cpp":1},"b_Tree":{"B_Tree.cpp":1},"fenwick_tree":{"FenwickTree.py":1,"fenwick_tree.c":1,"fenwick_tree.cpp":1,"fenwick_tree.java":1},"hash_table":{"HashTable.java":1,"HashTable.js":1},"heap":{"MaxHeap.cpp":1,"max_heap.c":1,"max_heap.go":1,"max_heap.py":1,"minheap.cpp":1,"minheap.java":1,"min_heap.cpp":1,"min_heap.py":1},"interval_trees":{"interval_trees.cpp":1},"kd_tree":{"KDTree.cpp":1,"KDTree.java":1},"leftist_tree":{"LeftistPriorityQueue.cpp":1},"linked_list":{"circular_linked_list":{"circular_linked_list.cpp":1},"doubly_linked_list":{"Doubly_Linked_List.cpp":1},"linked_list":{"linked_list.c":1,"linked_list.go":1,"linked_list.py":1,"singly_linked_list.cpp":1,"singly_linked_list.java":1,"singly_linked_list.js":1},"linked_lists_operations":{"DetectCycle.cpp":1,"LinkedList.java":1,"LL_Reverse_Recursion.cpp":1,"merge_sort_linked_list.cpp":1,"n_th_node_linked_list":{"nthNodeFromEnd.cpp":1,"nth_node_from_end.c":1},"Print_linked_list_in_reverse_Order.py":1,"reverselinkedlist_iteration.cpp":1,"reverse_list.c":1,"reverse_list.cpp":1,"rotate_list.cpp":1,"union_intersection_in_list.c":1}},"queue":{"queue":{"Queue.c":1,"queue.cpp":1,"Queue.go":1,"queue.py":1,"Queues.java":1,"queue_vector.cpp":1},"queue_using_linked_list":{"QueueUsingLL.c":1,"QueueUsingLL.java":1,"queue_using_linked_list.cpp":1,"queue_using_linked_list.py":1},"queue_using_stacks":{"QueueStacks.java":1},"reverse_queue":{"reverse_queue.cpp":1,"reverse_queue.java":1}},"red_black_tree":{"RedBlackTree.java":1},"segment_tree":{"lazy_segment_tree.java":1,"Persistent_SegmentTree_sum.cpp":1,"SegmentTree.java":1,"SegmentTree_sum.cpp":1,"segment_tree_kth_statistics_on_segment.cpp":1,"segment_tree_lazy_propagation.cpp":1,"Segment_Tree_RMQ.cpp":1,"segment_tree_rmq.py":1},"skip_list":{"skip_list.cpp":1},"splay_tree":{"splaytree.go":1,"splay_tree.java":1},"stack":{"abstract_stack":{"cpp":{"arrayStack":{"arraystackTester.cpp":1}}},"infix_to_postfix":{"InfixToPostfix.java":1,"infix_to_postfix.c":1,"infix_to_postfix.cpp":1,"infix_to_postfix.py":1},"postfix_evaluation":{"infix_to_postfix_evaluation.cpp":1},"prefix_to_postfix":{"prefix_to_postfix.py":1},"reverse_stack":{"reverse_stack.py":1,"reverse_stack_without_extra_space.cpp":1},"stack":{"Stack.c":1,"Stack.cpp":1,"Stack.go":1,"Stack.js":1,"Stack.py":1,"Stacks.java":1}},"treap":{"treap.cpp":1,"treap.java":1},"tree":{"binary_search_tree":{"binary_search_tree.c":1,"binary_search_tree.cpp":1,"binary_search_tree.go":1,"binary_search_tree.js":1,"binary_search_tree.py":1},"binary_search_tree_height":{"BinaryTreeHeight.java":1,"Binary_Search_ Tree_Height_Max_Depth.cpp":1,"binary_search_tree_height.cpp":1,"binary_search_tree_height.py":1},"binary_tree":{"BinaryTree.java":1,"bottom_view_binary_tree":{"Bottom_view.cpp":1,"Bottom_view.java":1}},"binary_tree_diameter":{"binary_tree_diameter.c":1,"binary_tree_diameter.cpp":1,"diameter_binary_tree.java":1,"diameter_binary_tree.py":1,"diameter_tree.c":1},"binary_tree_minimum_height":{"minimum_height_binary_tree.cpp":1,"min_depth.c":1,"min_height.py":1,"min_height_binary_tree.java":1},"binary_tree_mirror":{"Binary_Tree_Mirror.cpp":1,"MirrorElementsBst.py":1,"mirror_image.c":1},"check_balanced_binary_tree":{"balanced_or_not.java":1},"inorder_and_preorder_to_postorder":{"inorder_and_preorder_to_postorder.c":1,"inorder_and_preorder_to_postorder.cpp":1},"left_view_binary_tree":{"leftView.java":1},"make_tree_from_inorder_and_preorder":{"MakeTreefromInorderAndPreorder.java":1},"right_threaded_binary_tree":{"right_threaded_binary_tree.cpp":1},"right_view_binary_tree":{"right_view.cpp":1,"right_view.py":1,"right_view_binary_tree.cpp":1},"sum_left_leaves":{"sum_left_leaves.c":1}},"trie":{"Trie.c":1,"Trie.java":1,"Trie.py":1,"Trie_add_and_search.cpp":1},"union_find":{"union_find.cpp":1}},"divide_conquer":{"closest_pair_of_points":{"closest_pair.cpp":1},"inversion_count":{"count_inversions.c":1,"inversion_count.cpp":1,"inversion_count.java":1},"merge_sort_using_divide_and_conquer":{"merge_sort_usingDandC.cpp":1},"Quick_Sort":{"QuickSort.cpp":1,"QuickSort.py":1,"quick_sort.c":1,"quick_sort.cpp":1}},"dynamic_programming":{"Array_Median":{"Median.java":1,"median.py":1},"binomial_coefficient":{"binomial_coefficient.c":1,"binomial_coefficient.cpp":1,"binomial_coefficient.py":1},"boolean_parenthesization":{},"box_stacking":{},"coin_change":{"coinchange.cpp":1,"coin_change.java":1,"coin_change.py":1},"edit_distance":{"editDistance.py":1,"edit_distance.c":1,"edit_distance.cpp":1,"edit_distance.go":1,"edit_distance.java":1},"egg_dropping_puzzle":{"egg_dropping_puzzle.cpp":1},"knapsack":{"knapsack.c":1,"knapsack.cpp":1,"Knapsack.java":1,"knapsack.py":1},"largest_sum_contiguous_subarray":{"kadane.cpp":1,"LargestSum.java":1,"largest_sum_contiguous_subarray.cpp":1,"Largest_sum_continuous_array.java":1,"MaxContiguousSum.py":1,"maxSubArraySum.py":1},"longest_bitonic_sequence":{"longestBitonicSeq.cpp":1},"longest_common_subsequence":{"LongestCommonSubsequence.java":1,"LongestCommonSubsequenceRec.java":1,"longest_common_subsequence.cpp":1,"Longest_Common_Subsequence.py":1},"longest_increasing_subsequence":{"longest_increasing_subsequence.c":1,"longest_increasing_subsequence.cpp":1,"longest_increasing_subsequence.java":1,"longest_increasing_subsequence.py":1},"longest_independent_set":{},"longest_palindromic_sequence":{},"longest_palindromic_substring":{},"matrix_chain_multiplication":{"matrix_chain_multiplication.cpp":1},"maximum_sum_increasing_subsequence":{},"minimum_cost_polygon_triangulation":{},"minimum_insertions_palindrome":{"minimum_insertions_palindrome.cpp":1},"minimum_insertion_palindrome":{"minimum_insertions_palindrome_using_lcs.cpp":1},"min_cost_path":{"min_cost_path.cpp":1},"palindrome_partition":{"palindrome_partition.cpp":1},"rod_cutting":{"rod_cutting.cpp":1},"shortest_common_supersequence":{"SCS.java":1,"shortest_common_supersequence.cpp":1,"shortest_common_supersequence.py":1},"subset_sum":{"subset_sum.cpp":1},"tiling_problem":{"tiling.cpp":1},"weighted_job_scheduling":{}},"graph-algorithms":{"bellman_ford_algorithm":{"BellmanFord.java":1,"bellman_ford.c":1,"bellman_ford.cpp":1,"bellman_ford.py":1},"biconnected_components":{"biconnected_components.cpp":1},"Bipartite_check":{"Bipartite_check.java":1},"bipartite_checking":{"bipartite.cpp":1,"BipartiteBfs.java":1,"bipartitecheckingusing_bfs.cpp":1,"bipartite_checking.cpp":1},"boruvka_minimum_spanning_tree":{},"breadth_first_search":{"bfs.cpp":1,"Bfs.java":1,"breadth_first_search.py":1},"bridges_in_graph":{"bridges.cpp":1},"bridge_tree":{"bridge_tree.cpp":1},"channel_assignment":{},"count_of_ways_n":{"Count_of_ways_n.cpp":1},"cut_vertices":{"cut_vertices.cpp":1},"cycle_directed_graph":{"cycle_directed_graph.cpp":1},"cycle_undirected_graph":{"CheckCycle.java":1,"cycleGraph.cpp":1,"cycle_undirected_graph.py":1,"cycle_using_union_find_datastructure.cpp":1},"depth_first_search":{"depth_first_search.py":1,"dfs.cpp":1,"dfs.go":1,"Dfs.java":1},"dijkstra_shortest_path":{"dijkstra.cpp":1,"Dijkstra.py":1,"Dijkstra_Algorithm.c":1,"dijkstra_efficient.py":1,"dijkstra_gnu_fast.cpp":1},"eulerian_path":{},"fleury_algorithm_euler_path":{},"floyd_warshall_algorithm":{"floydWarshall.c":1,"FloydWarshall.java":1,"floyd_warshall.cpp":1,"floyd_warshall.py":1},"ford_fulkerson_maximum_flow":{"ford_fulkerson.cpp":1,"ford_fulkerson_using_bfs.cpp":1,"ford_fulkerson_using_bfs.py":1},"graph_coloring":{"graph_coloring.cpp":1,"graph_color_greedy.py":1},"hamiltonian_cycle":{},"hopcroft_karp_algorithm":{},"johnson_algorithm_shortest_path":{},"karger_minimum_cut":{},"kruskal_minimum_spanning_tree":{"kruskal_minimum_spanning_tree.cpp":1,"kruskal_minimum_spanning_tree.py":1,"kruskal_mst.c":1},"kuhn_maximum_matching":{"kuhn_maximum_matching.cpp":1},"left_view_binary_tree":{"left_view_binary_tree.cpp":1},"longest_path_directed_acyclic_graph":{"longest_path_directed_acyclic_graph.cpp":1},"maximum_bipartite_matching":{},"maximum_edge_disjoint_paths":{},"minimum_s_t_cut":{},"postorder_from_inorder_and_preorder":{"inprepost.cpp":1},"prim_minimum_spanning_tree":{"Prims.c":1,"prim_minimum_spanning_tree.cpp":1,"prim_minimum_spanning_tree.py":1},"shortest_path_k_edges":{},"strongly_connected_components":{"strongly_connected_components.cpp":1},"tarjan_algorithm_strongly_connected_components":{},"topological_sort":{"toposort.cpp":1,"toposort.py":1},"transitive_closure_graph":{"transitive_closure.cpp":1,"transitive_closure_graph.py":1,"transitive_closure_graph_floyd_warshall.cpp":1},"travelling_salesman_mst":{"Travelling_salesman.cpp":1},"vertex_cover":{}},"greedy-algorithms":{"activity_selection":{"activity_selection.cpp":1},"dijkstra_shortest_path":{"dijkstra-shortest-path.cpp":1,"dijkstra_shortest_path.java":1,"dijkstra_shortest_path.py":1},"egyptian_fraction":{"egyptian_fraction.cpp":1},"fractional_knapsack":{"fractional_knapsack.c":1,"fractional_knapsack.cpp":1,"fractional_knapsack.java":1,"fractional_knapsack.py":1},"huffman_coding":{"huffman_coding.cpp":1},"job_sequencing":{"job_sequencing.cpp":1},"kruskal_minimum_spanning_tree":{"kruskal.c":1,"kruskal.py":1},"k_centers":{},"minimum_coins":{"minimum-coins.js":1,"MinimumCoins.java":1,"minimum_coins.cpp":1,"minimum_coins.py":1},"prim_minimum_spanning_tree":{"prim_mst.cpp":1}},"mathematical-algorithms":{"add_polynomial":{"add_polynomials.cpp":1},"amicable_numbers":{"Amicable numbers.cpp":1,"amicable numbers.py":1,"Amicable_numbers.java":1},"armstrong_numbers":{"armstrong.go":1,"armstrong.py":1,"armstrong_numbers.c":1,"armstrong_numbers.cpp":1,"armstrong_numbers.java":1},"automorphic_numbers":{"automorphic.cpp":1,"automorphic.py":1},"average_stream_numbers":{"average_stream_numbers.cpp":1,"average_stream_numbers.py":1},"babylonian_method":{"babylonian.c":1,"Babylonian.java":1,"babylonian_method.cpp":1,"Babylonian_method.py":1,"babylonian_root.cpp":1,"babylonian_sqrt.js":1},"basic":{"Greatest_digit_in_number":{"Greatest_digit_in_number.c":1,"Greatest_digit_in_number.cpp":1},"log_of_factorial":{"logfactorial.cpp":1},"Smallest_digit_in_number":{"smallest_digit_in_number.c":1,"smallest_digit_in_number.cpp":1}},"binomial_coefficient":{"binomialCoefficient.cpp":1,"binomialCoefficient.go":1,"BinomialCoefficient.java":1},"catalan_number":{"CatalanNumber.java":1,"catalan_number.c":1,"catalan_number.py":1,"catalan_number_dynamic.cpp":1,"catalan_number_recursive.cpp":1,"catlan_number.py":1},"Check_is_square":{"FindindSquare.java":1,"FindingISquare.cpp":1,"Finding_Square.py":1},"classic_number_problems":{"1729.py":1},"coprime_numbers":{"Coprime_numbers.c":1,"coprime_numbers.cpp":1,"coprime_numbers.py":1,"coprime_recursion.cpp":1},"count_digits":{"count_digits.cpp":1,"count_digits.js":1,"count_digits.py":1},"count_trailing_zeroes":{"count_trailing_zeroes.c":1,"count_trailing_zeroes_factorial.java":1,"count_trailing_zeros_factorial.cpp":1,"count_trailing_zeros_factorial.py":1},"decoding_of_string":{},"delannoy_number":{"delannoy_number.cpp":1},"dfa_division":{},"diophantine":{"diophantine.cpp":1},"EulerTotient":{"EulerTient.java":1,"euler_totient.c":1,"euler_totient.cpp":1,"euler_totient.py":1,"euler_totient_sieve.cpp":1},"exponentiation_power":{"Exponent.java":1,"Exponentation Power in C.c":1,"exponentation_power_gnu_easy.cpp":1,"exponentiation_by_squaring":{"exponentiation_by_squaring.cpp":1,"exponentiation_by_squaring.py":1},"modulo_exponentation_power.cpp":1},"factorial":{"Factorial.java":1,"factorial_recursion.cpp":1,"factorial_recursion.py":1},"fast_inverse_sqrt":{"fast_inverse_sqrt.cpp":1},"fermats_little_theorem":{"fermat_little.cpp":1},"fibonacci_number":{"fibonacci.c":1,"fibonacci.cpp":1,"fibonacci.go":1,"fibonacci.js":1,"fibonacci.py":1,"fibonacci_matrix_exponentiation.cpp":1,"fibonacci_matrix_multiplication.py":1},"gcd_and_lcm":{"gcdandlcm.cpp":1,"gcd_and_lcm.py":1,"gcd_gnu.cpp":1,"Gcd_Lcm_Calc.java":1},"horner_polynomial_evaluation":{"horner.cpp":1},"integer_conversion":{"decimal_to_any_base.js":1,"decimal_to_bin.cpp":1,"decimal_to_hex.cpp":1,"decimal_to_oct.cpp":1},"lexicographic_string_rank":{},"lucky_number":{"lucky_number.c":1},"magic_square":{"magic_square.py":1},"modular_inverse":{"modular_inverse.cpp":1,"modular_inverse.py":1},"multiply_polynomial":{"FFT.cpp":1},"newton_raphson_method":{"newton_raphson.c":1,"newton_raphson.cpp":1},"next_larger_number":{"next_larger_number.cpp":1,"next_larger_number.java":1,"next_larger_number.py":1},"pascal_triangle":{"pascal_triangle.cpp":1},"perfect_number":{"perfect_number.c":1,"perfect_number.cpp":1,"perfect_number.java":1,"perfect_number.js":1,"perfect_number.py":1,"perfect_number_list.cpp":1},"permutation_lexicographic_order":{"permutation_lexicographic_order.cpp":1},"primality_tests":{"fermat_primality_test":{"fermat_primality_test.c":1},"miller_rabin_primality_test":{"miller_rabin_primality_test.cpp":1},"solovay-strassen_primality_test":{"solovay_strassen.c":1}},"prime_factors":{"prime_factors.cpp":1,"prime_factors.py":1},"prime_numbers_of_n":{"prime_factors.py":1,"prime_numbers_by_sieve.cpp":1},"replace_0_with_5":{"change0to5.py":1,"replace.c":1,"replace.cpp":1,"zero_to_five_efficent.cpp":1},"reverse_number":{"Reverse.java":1,"reverse_number.cpp":1},"russian_peasant_multiplication":{"russianPeasant.go":1,"russian_peasant.cpp":1,"russian_peasant.py":1},"segmented_sieve_of_eratosthenes":{"segmented_sieve_of_eratosthenes.cpp":1},"shuffle_array":{"shuffle_array.js":1},"sieve_of_eratosthenes":{"erathosthenes.java":1,"erato.py":1,"sieve.go":1,"sieve_of_erathosthenes_compact.cpp":1,"sieve_of_eratosthenes.c":1,"sieve_of_eratosthenes.cpp":1,"sieve_of_eratosthenes.js":1,"sieve_of_eratosthenes_linear.cpp":1},"std":{"std.c":1,"std.py":1},"sum_of_digits":{"sumofdigits.c":1,"SumOfDigits.java":1,"sum_of_digits.go":1,"sum_of_digits.js":1,"sum_of_digits_function.c":1,"Sum_of_digits_function.cpp":1,"Sum_of_digits_function.py":1,"sum_of_digits_with_recursion.c":1},"tower_of_hanoi":{"tower-of-hanoi.c":1,"tower-of-hanoi.cpp":1,"tower-of-hanoi.py":1,"TowersOfHanoi.java":1,"tower_of_hanoi.cpp":1,"tower_of_hanoi.go":1,"tower_of_hanoi.js":1,"tower_of_hanoi_BinarySolution.c":1},"tribonacci_numbers":{"tribonacci.go":1,"Tribonacci.java":1,"tribonacci_number.cpp":1,"tribonacci_numbers.cpp":1,"Tribonacci_numbers.py":1,"Tribonnaci.java":1}},"randomized-algorithms":{"karger_minimum_cut_algorithm":{"karger_minimum_cut_algorithm.cpp":1},"kth_smallest_element_algorithm":{"kth_smallest_element_algorithm.cpp":1},"random_from_stream":{"Random_number_selection_from_a_stream.cpp":1},"random_node_linkedlist":{},"reservoir_sampling":{"reservoir_sampling.cpp":1},"shuffle_an_array":{"shuffle_an_array.cpp":1,"shuffle_an_array.py":1}},"search":{"binary_search":{"binary_search.c":1,"binary_search.cpp":1,"binary_search.go":1,"binary_search.java":1,"binary_search.js":1,"binary_search.py":1},"exponential_search":{"exponentialsearch.cpp":1,"exponential_search.cpp":1,"exponential_search.go":1,"exponential_search.java":1,"exponential_search.js":1,"exponential_search.py":1},"interpolation_search":{"Interpolation.java":1,"interpolation_search.c":1,"Interpolation_search.cpp":1,"interpolation_search.go":1,"interpolation_search.py":1},"jump_search":{"jumpsearch.cpp":1,"JumpSearch.java":1,"jump_search.py":1},"linear_search":{"LinearSearch.go":1,"linear_search.c":1,"linear_search.cpp":1,"linear_search.java":1,"linear_search.js":1,"linear_search.py":1},"ternary_search":{"ternarySearch.cpp":1,"ternarySearch.js":1,"ternary_search.c":1,"ternary_search.go":1,"Ternary_search.java":1,"ternary_search.py":1}},"selection-algorithms":{"quickselect.cpp":1,"quickselect_stl.cpp":1},"sorting":{"bead_sort":{"BeadSort.java":1,"beadsort.js":1,"beadsort.py":1,"beadsort_numpy.py":1,"bead_sort.cpp":1},"bubble_sort":{"bubblesort.c":1,"BubbleSort.cpp":1,"BubbleSort.java":1,"bubble_sort.cpp":1,"bubble_sort.go":1,"bubble_sort.js":1,"bubble_sort.py":1},"bucket_sort":{"BucketSort.c":1,"bucketsort.cpp":1,"bucketsort.java":1,"bucketsort.py":1,"bucket_sort.go":1,"bucket_sort.js":1},"circle_sort":{"CircleSort.java":1,"circle_sort.c":1,"circle_sort.py":1},"comb_sort":{"combSort.cpp":1,"combSort.js":1},"counting_sort":{"countingSort.cpp":1,"CountingSort.java":1,"countsort.c":1,"countsort.go":1,"countsort.js":1,"countsort.py":1},"cycle_sort":{"CycleSort.java":1,"cycle_sort.cpp":1,"cycle_sort.go":1,"cycle_sort.js":1,"cycle_sort.py":1},"heap_sort":{"heap_sort.cpp":1,"heap_sort.go":1,"heap_sort.java":1,"heap_sort.js":1,"heap_sort.py":1},"insertion_sort":{"InsertionSort.c":1,"InsertionSort.cpp":1,"InsertionSort.java":1,"insertion_sort.go":1,"insertion_sort.js":1,"insertion_sort.py":1},"median_sort":{"median_sort.cpp":1,"median_sort.py":1,"median_sort_fast.cpp":1},"merge_sort":{"Mergesort.c":1,"MergeSort.cpp":1,"MergeSort.java":1,"merge_sort.js":1,"merge_sort.py":1},"pigeonhole_sort":{"pigeonhole_sort.c":1,"pigeonhole_sort.cpp":1,"pigeonhole_sort.java":1,"pigeonhole_sort.py":1},"quick_sort":{"QuickSort.go":1,"Quicksort.java":1,"quick_sort.c":1,"quick_sort.cpp":1,"quick_sort.js":1,"quick_sort.py":1},"radix_sort":{"radix_sort.cpp":1,"radix_sort.go":1,"radix_sort.py":1},"selection_sort":{"SelectionSort.go":1,"SelectionSort.java":1,"selectionSort.js":1,"SelectionSort.py":1,"Selection_Sort.c":1,"selection_sort.cpp":1},"shaker_sort":{"ShakerSort.java":1,"shaker_sort.c":1,"shaker_sort.cpp":1,"shaker_sort.js":1,"shaker_sort.py":1},"shell_sort":{"ShellSort.cpp":1,"shellSort.js":1,"shell_sort.py":1},"Sleep_Sort":{"SleepSort.java":1,"Sleep_Sort.c":1,"sleep_sort.cpp":1,"Sleep_Sort.go":1,"Sleep_sort.js":1,"Sleep_Sort.py":1},"stooge_sort":{"stoogesort.c":1,"stoogesort.go":1,"stoogesort.py":1},"topological_sort":{"topologicalSort.c":1},"tree_sort":{"treesort.c":1,"treesort.js":1,"tree_sort.cpp":1,"tree_sort.py":1}},"square_root_decomposition":{"MO's Algorithm":{"MOAlgo.cpp":1}},"string-algorithms":{"aho_corasick_algorithm":{},"anagram_search":{"anagram_search.cpp":1,"anagram_search.py":1},"boyer_moore_algorithm":{"boyer_moore.c":1},"finite_automata":{},"kasai_algorithm":{},"kmp_algorithm":{"kmp_algorithm.cpp":1},"lipogram_checker":{"lipogram_checker.cpp":1,"lipogram_checker.py":1},"manachar_algorithm":{"manachar_longest_palindromic_subs.cpp":1,"manachar_longest_palindromic_subs.py":1},"naive_pattern_search":{"naive_pattern_search.py":1},"palindrome_checker":{"palindrome.cpp":1,"palindrome.go":1,"Palindrome.java":1,"Palindrome.js":1,"palindrome.py":1},"pangram_checker":{"pangram-checker.js":1,"pangram.cpp":1,"Pangram.java":1,"pangram_checker.c":1,"pangram_checker.py":1},"rabin_karp_algorithm":{"rabin-karp.c":1,"RabinKarp.java":1},"suffix_array":{},"trie_pattern_search":{},"z_algorithm":{"Z-algo.cpp":1,"Z_Algorithm.py":1,"z_algorithm_z_array.cpp":1}},"unclassified":{"2sum":{"2sum.cpp":1,"2sum.py":1},"average":{"average.cpp":1,"average.go":1,"average.java":1,"average.py":1},"biggest_suffix":{"biggest_suffix.c":1},"magic_sqaure":{"magic_square.c":1},"spiral_printing":{"spiral.c":1,"spiral_print.cpp":1,"spiral_print.go":1,"spiral_print_array.py":1}}}}
